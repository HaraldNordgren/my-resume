WEBBUTVECKLARE

Rateyourmusic är en hemsida där användare kan katalogisera, betygsätta, recensera och diskutera musik. Användare kan lägga till nya album så länge upgifterna kan styrkas med hänvisning till ett fysiskt exemplar eller en officiell bandhemsida.

Bandcamp är en streamingsida för musik. Artister och oberoende skivbolag publicerar material som man kan lyssna på gratis i webbläsaren eller köpa och ladda ner.

Jag har varit en aktiv användare av dessa tjänster i många år och tröttande på att manuellt flytta över info och fixa med formatering för att lägga till nya album på Rateyourmusic. Båda sidor saknar API, så jag skrev en webcrawler i Python som extraherar albuminformation från Bandcamps HTML och sedan med Splinter genererar ett broweserfönster som loggar in på Rateyourmusic och navigerar sidan för att skapa/uppdatera ett album med utgivningsdatum, genre, låtlista, korrigerar liten och stor bokstav i titlar, samt laddar upp skivomslag när bättre kvalitet finns att tillgå.

Jag använde Chrome developer tools för att hitta rätt HTML-taggar för att på ett generiskt sätt navigera till rätt textrutor, knappar och menyer på hemsidorna.

Programmet kan även hämtar information från Spotifys API.


Tekniker: Python, BeatifulSoup, Spotipy, Splinter/Selenium, Argparse, Perl, Git
Miljöer: Ubuntu 14.04, Vim, Google Chrome Developer Tools




SYSTEMUTVECKLARE

Jag har jobbat med videokomprimering på Ericsson. Jag skrev en testmiljö för att ta fram mätadata för experiment nedskalningar av 1080p. Jag mäter bitrate och bildkvalite (MSE) för simulerad uplink och downlink för 120 testfall och använder openpyxl för att dynamiskt flytta över och presentera informationen i Excel och generera grafer.

I python kallar jag på olika binärer i en lång kedja, och hanterar resultaten och bygger en filhierki för att ta vara på outputfiler. Regex används för att extrahera information om bildstorlek och framerate.

Jag beräkningar måste köras på ett linuxkluster då de är räkneintensiva, medan excel kräver ett grafiskt användargränsnitt så jag blir tvungen att hantera skillnader i radbrytning mellan Windows och Linux för att mata utdata från en miljö in i en annan.

Jag deployar jobben på ett kluster för att köra parallelt, och använder fillås för att skydda data mellan parallella processer som annars försöker skriva till samma bitström. Skapa en massiv filstruktur för varje experiment, samt effektivt analysisera loggfiler för att upptäcka fel.

Jag har lagt till features in kodare och avkodare, där jag jobbar nära bitströmmen, vilket har gett vissa vinster. 

Tekniker: Python, C/C++, Boost, Shell-skript, Platform LSF, LaTeX
Mijöer: Windows 7, Red Hat linux, Ubuntu 14.04, Visual Studio, Sublime Text, Vim, Git, SVN



SPELUTVECKLARE

Jag hittade källkoden till en enkel 2d-platformare och bytte ut texturer mot Sonic the Hedgehog-sprites och bakgrunder som jag hittade på nätet.

Jag byggde en enkel bana.

Tekniker: Python 2, pygame, imagemagick
Miljöer: Ubuntu 14.04, Vim


WEBBUTVECKLARE

Jag undersöktre möjligheterna att tjäna pengar genom att utnyttja arbitrage på odds mellan olika bettingsidor.
Då sidorna ofta inte har öppna API och vägrar att bli crawlade krävs att man navigerar med Splinter för att dels extrahera information, och sedan för att spela på de med sidor med bäst odds när det uppstår arbitrage.


WEBBUTVECKLARE

Skript för att hitta gömda extentor på LTH:s webbservrar.

Jag märkte att genom att manipulera URL:en kunde man hitta filer som inte var länkade på kurshemsidorna. Då mapparna på servern inte var indexade kunde jag inte veta hur många gömda filer som fanns, men då addresserna ofta följer ett mönster med tentadatum och kurskod itererade jag över rimliga tentadatum för de senaste 10 åren, skickar get requests till servern och laddar ner de filer som returnerar statuskod OK.

TEKNIKER: Python, requests, httplib, Git
Miljöer: Ubuntu, Vim
